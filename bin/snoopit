#!/usr/bin/env ruby
require 'optparse'
require 'logger'
require 'snoopit'

options = {}
options[:snoopies]='snoopies.json'
options[:verbose] = false
options[:line_numbers] = false
options[:new_line] = true
options[:json] = false
options[:pretty_json] = false

OptionParser.new do |opts|

  opts.banner = 'Usage: snooper [options]'

  opts.on('-s', '--snoopers snoopies.json', 'File contains one or more regular expressions to locate a line of interest in a file' ) do |r|
    options[:snoopies] = r
  end

  opts.on('-t', '--template', 'Generate and template snoopies.json file to stdout' ) do
    template = File.expand_path '../../support/snoopies.json', __FILE__
    puts template
    File.readlines(template).each do |line|
      puts line
    end
    exit
  end

  opts.on('-j', '--json', 'Generate output in json' ) do
    options[:json]  = true
  end

  opts.on('-J', '--pretty-json', 'Generate output in pretty json' ) do
    options[:json]  = true
    options[:pretty_json] = true
  end

  opts.on('-N', '--no-newline', 'Do not output new line between found items' ) do |l|
    options[:new_line] = false
  end

  opts.on('-l', '--line-numbers', 'show line numbers' ) do |l|
    options[:line_numbers] = true
  end

  opts.on_tail('-v', '--verbose', 'prints out file name, matched line number') do
    options[:verbose] = true
  end

  opts.on_tail('-h', '--help') do
    puts opts
    exit
  end

end.parse!

def verbose(sniffed)
  puts ''
  puts "File: #{sniffed.file}"
  puts "Match at line number: #{sniffed.line_no}"
  puts "** Sniffed Out ** #{sniffed.match}"
  puts ''
end

def get_start_line_number(sniffed)
  start = sniffed.line_no - sniffed.after.size
  start = 1 if start <= 0
  start
end

def line_before(line_no, sniffed)
  sniffed.before.register.each do |b|
    unless b.nil?
      puts "#{line_no}: #{b}"
      line_no += 1
    end
  end
  line_no
end

def line_after(line_no, sniffed)
  sniffed.after.register.each do |a|
    unless a.nil?
      puts "#{line_no}: #{a}"
      line_no += 1
    end
  end
  line_no
end

def line_numbers(sniffed)
  line_no = get_start_line_number sniffed
  line_no = line_before line_no, sniffed
  puts "#{line_no}: #{sniffed.match}"
  line_no += 1
  line_after line_no, sniffed
end

def no_line_numbers(sniffed)
  sniffed.before.register.each {|b| puts b unless b.nil? }
  puts sniffed.match
  sniffed.after.register.each {|a| puts a unless a.nil? }
end

def dump_lines(snoopies, newline, line_no, is_verbose)
  snoopies.each do |snoopie|
    snoopie.sniffers.each do |sniffer|
      sniffer.sniffed.each do |sniffed|
        verbose sniffed if is_verbose
        line_no ? line_numbers(sniffed) : no_line_numbers(sniffed)
        puts '' if newline
      end
    end
  end
end

def dump_json(snoopies, pretty=false)
  if pretty
    puts JSON.pretty_generate snoopies
  else
    puts snoopies.to_json
  end

end

snooper = Snoopit::Snooper.new
snooper.load_file options[:snoopies]
snoopies = snooper.snoop

if options[:json]
  dump_json snoopies, options[:pretty_json]
else
  dump_lines snoopies, options[:new_line], options[:line_numbers], options[:verbose]
end




